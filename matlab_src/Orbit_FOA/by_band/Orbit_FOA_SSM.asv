
clc
clear
close

% Script Inputs
size = 2000;
theta_Lat = 80;
low_alt = 100;
high_alt = 40000;
min_inc = 50;

% Calculate constraints on upper latitudes, inc, and alt
theta_1_lim = 60;
theta_2_lim = 21; 
theta_3_lim = 180 - theta_1_lim;
r_earth = 6378;

results = zeros(size,size);
inc_transition = zeros(1,size);

i = 1;
for inc = linspace(min_inc,90,size)
    j = 1;
    check_var = 1;
    for r_r_mag = linspace(r_earth+low_alt,r_earth+high_alt,size)
        r_r = [r_r_mag*cosd(inc) r_r_mag*sind(inc)];
        r_s = [r_earth*cosd(theta_Lat) r_earth*sind(theta_Lat)];
        r_sr = r_r - r_s;
        r_sr_mag = norm(r_sr);
        theta2 = asind(r_earth*sind(theta_Lat - inc)/r_sr_mag);
        theta3 = asind(r_r_mag*sind(theta_Lat - inc)/r_sr_mag);
        if((theta2 + theta3 + theta_Lat - inc) ~= 180)
            theta3 = 180 - theta3;
        end
        if(theta2 <= theta_2_lim && theta3 >= theta_3_lim)
            results(j,i) = 1;
            if check_var == 1
                inc_transition(i) = r_r_mag - r_earth;
                check_var = 0;
            end
        end
        j = j + 1;
    end
    i = i + 1;
end

format shortg
inc = round(linspace(min_inc,90,size),1);
alt = round(linspace(low_alt,high_alt,size),1);

%set inclinations for receiver
i_r = 0:0.1:90;

%GPS inc, all GNSS sats had similar SMAs and inc so I just used GPS here
i_t_GPS = 55;
r_t_GPS = 20200;
%Iridium, 86.4 inc
i_t_Irid = 86.4;
r_t_Irid = 780;
%Galileo
i_t_Gal = 56;
r_t_Gal = 23222;
%GLONASS
i_t_Glo = 64.8;
r_t_Glo = 25508;

% Iridium, 
const_inc = [86.4 55 56 64.8];
const_r = [780 20200 23222 25508];

for i = 1:len(const_inc)
    
end

%antenna incidence (set as 60 for now for all cases)
t_2 = theta_2_lim;

%alt. of receiver vs. inc. of receiv.
%GPS
t_4GPS = t_2 - i_r + i_t_GPS;
r_rGPS = r_t_GPS./sind(180-t_2)*sind(t_4GPS);
%Iridium
t_4Irid= t_2 - i_r + i_t_Irid;
r_rIrid = r_t_Irid./sind(180-t_2)*sind(t_4Irid);
%Galileo
t_4Gal= t_2 - i_r + i_t_Gal;
r_rGal = r_t_Gal./sind(180-t_2)*sind(t_4Gal);
%GLONASS
t_4Glo = t_2 - i_r + i_t_Glo;
r_rGlo = r_t_Glo./sind(180-t_2)*sind(t_4Glo);

%plot for GPS, note: Earth radius is subtracted to make this altitude
figure
plot(i_r,r_rGPS,'b',i_r,r_rGal,'g',i_r,r_rGlo,'c','LineWidth',1.2)
hold on
plot(inc,inc_transition,'r','LineWidth',1.2)
title('GEO Constellations for P-Band SSM Requirement')
subtitle('Must be ABOVE red curve and BELOW constellation curves')
xlabel('Inclination [degs]')
ylabel('Altitude [km]')
legend('GPS Upper Lim','Galileo Upper Lim','GLONASS Upper Lim',...
    'Satellite Lower Lim','Location','Southwest')
set(gca,'FontSize',12)
set(gca,'FontWeight','bold')
ylim([-5000 15000])
grid on

figure
plot(i_r,r_rIrid,'b','LineWidth',1.2)
hold on
plot(inc,inc_transition,'r','LineWidth',1.2)
title('LEO Constellations for P-Band SSM Requirement')
subtitle('Must be ABOVE red curve and BELOW constellation curves')
xlabel('Inclination [degs]')
ylabel('Altitude [km]')
legend('Iridium Upper Lim','Satellite Lower Lim','Location','Southwest')
set(gca,'FontSize',12)
set(gca,'FontWeight','bold')
ylim([-500 2000])
grid on




